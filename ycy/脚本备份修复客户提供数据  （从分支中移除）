<?php


namespace app\cli\repair;
/**
 * 上线无需执行
 * 只是将客户提供的信息写入到修复表中
 * 展示用并无实际用途
 */

use app\cli\command\Base;
use app\common\model\RepairAishuaTerminalModel;
use app\common\model\RepairRtzsTerminalModel;
use think\console\Input;
use think\console\input\Argument;
use think\console\Output;
use think\Db;

class RepairTerminalOldData extends Base
{
    protected $perNum = 1000;

    protected function configure()
    {
        $this->setName('repair_terminal_old_data')
            ->addArgument('option', Argument::OPTIONAL, '操作', '')
            ->setDescription('修复客户数据');
    }

    /**
     * 修复数据
     * 逻辑为客户提供的SN表 对比线上正式Sn表 获取到 SN对应的brand_id  根据获取到的brand_id 获取到基本信息  更新到客户提供的sn表中
     * @param Input $input
     * @param Output $output
     * @return int|void|null
     */
    protected function execute(Input $input, Output $output)
    {
        ini_set("memory_limit", "-1");
        $option = $input->getArgument("option");
        if ($option === "rtzs") {
            $this->exec1();

        } else {
            $this->exec();
        }
    }

    protected function exec1()
    {
        $model = new RepairRtzsTerminalModel();
        //获取正式表中有多少条数据
        $countSn = Db::table("test_sn")->count();

        $num = ceil($countSn / $this->perNum);//获取总共循环次数
        //从正式的品牌表中取出品牌的基本信息
        $brand_list = Db::table('test_brand')->column('organization_id,number,name', 'brand_id');
        //循环处理数据
        for ($i = 0; $i <= $num; $i++) {
            $this->output("第" . $i . "次更新开始查询");
            $star = $i * $this->perNum;

            //取出正式表中的记录(organization_id brand_id sn )
            $list = Db::table("test_sn")->where('brand_id', '>', 0)->limit($star, $this->perNum)->column('organization_id,brand_id', 'sn');
            //获取sn集合
            $sn_list = array_keys($list);
            //获取客户表中sn合集的信息
            $old_sn_list = $model->where('sn', 'in', $sn_list)->select()->toArray();

            if (!empty($old_sn_list)) {
                foreach ($old_sn_list as $sk => $sv) {
                    if ($sv['sn']) {
                        $old_sn_list[$sk]['brand_name'] = $brand_list[$list[$sv['sn']]['brand_id']]['name'];
                        $old_sn_list[$sk]['brand_id'] = $list[$sv['sn']]['brand_id'];
                        $old_sn_list[$sk]['number'] = $brand_list[$list[$sv['sn']]['brand_id']]['number'];
                    } else {
                        $this->output("sn为" . $sv['sn'] . "没有品牌信息");
                    }
                }
                //批量写入客户终端表中
                $this->output("第" . $i . "次开始更新--------------");
                sleep(1);
                try {
                    $re = $model->saveAll($old_sn_list);
                } catch (\Exception $e) {
                    $this->output($e->getMessage());
                }
                sleep(1);
                $this->output("第" . $i . "次更新完毕-----------------");
            } else {
                $this->output("第" . $i . "次--没有需要更新的数据");
            }

        }
        $this->output("xrdq is over");

    }

    protected function exec()
    {


        $model2 = new RepairAishuaTerminalModel();
        //获取正式表中有多少条数据
        $countSn = Db::table("test_sn")->count();
        $num = ceil($countSn / $this->perNum);//获取总共循环次数
        //从正式的品牌表中取出品牌的基本信息
        $brand_list = Db::table('test_brand')->column('organization_id,number,name', 'brand_id');

//        print_r($brand_list);die;
        //循环处理数据
        for ($i = 0; $i <= $num; $i++) {
            $this->output("第" . $i . "次更新开始查询");
            $star = $i * $this->perNum;
            //取出正式表中的记录(organization_id brand_id sn )
            $list = Db::table("test_sn")->where('brand_id', '>', 0)->limit($star, $this->perNum)->column('organization_id,brand_id', 'sn');
            //获取sn集合
            $sn_list = array_keys($list);
            //获取客户表中sn合集的信息
            $old_sn_list = $model2->where('sn', 'in', $sn_list)->select()->toArray();
            if (!empty($old_sn_list)) {
                foreach ($old_sn_list as $sk => $sv) {
                    if ($sv['sn']) {
                        $old_sn_list[$sk]['brand_name'] = $brand_list[$list[$sv['sn']]['brand_id']]['name'];
                        $old_sn_list[$sk]['brand_id'] = $list[$sv['sn']]['brand_id'];
                        $old_sn_list[$sk]['number'] = $brand_list[$list[$sv['sn']]['brand_id']]['number'];
                    } else {
                        $this->output("sn为" . $sv['sn'] . "没有品牌信息");
                    }
                }
                sleep(2);
                //批量写入客户终端表中
                $this->output("第" . $i . "次更新开始更新");
                try {
                    $re = $model2->saveAll($old_sn_list);
                } catch (\Exception $e) {
                    $this->output($e->getMessage());
                }
                sleep(1);
                $this->output("第" . $i . "次更新完毕");
            } else {
                $this->output("第" . $i . "次--没有需要更新的数据");
            }
        }
        $this->output("aishua is over");
    }


}
