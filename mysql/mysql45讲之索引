1 简单来说索引的出现就是为了提高查询的效率  通常理解就是 书的目录
2 实现索引的方式有很多  比较常见的是  常见的是 hash表索引  有序数组索引  和搜索树索引
 2.1  has表是一种以键值存储数据的结构
   2.1.1 好处：方便快捷
   2.1.2 不足； 区间查询的速度是很慢的  如  id-card-n2
 2.2 有数数组在等值查询和范围查询的场景中的性能是十分优秀的
     但是如果要插入需要维护的数据就很大
 2.3 现在用的最广泛的是N叉树
3 索引   是在存储引擎层中实现的    


总结 就是  hash：等值查询优秀，但范围查找性能差（需遍历）； 有序数组：等值查询，范围查找都优秀，但删除和插入性能差（需移动后边所有元素）； B+tree：等值查询和范围查找性能介于hash和有序数组之间


主键索引保存的是行的数据, 辅助索引保存的是主键的值, 通过辅助索引查找数据需要回表
#   innodb 中


如果 要重建主键索引   可用语句   alert table Tengine= InnoDB
